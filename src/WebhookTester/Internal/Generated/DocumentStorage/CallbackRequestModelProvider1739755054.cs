// <auto-generated/>
#pragma warning disable
using ApogeeDev.WebhookTester.Common.Models;
using Marten.Internal;
using Marten.Internal.Storage;
using Marten.Schema;
using Marten.Schema.Arguments;
using Npgsql;
using System;
using System.Collections.Generic;
using Weasel.Core;
using Weasel.Postgresql;

namespace Marten.Generated.DocumentStorage
{
    // START: UpsertCallbackRequestModelOperation1739755054
    public class UpsertCallbackRequestModelOperation1739755054 : Marten.Internal.Operations.StorageOperation<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>
    {
        private readonly ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel _document;
        private readonly System.Guid _id;
        private readonly System.Collections.Generic.Dictionary<System.Guid, System.Guid> _versions;
        private readonly Marten.Schema.DocumentMapping _mapping;

        public UpsertCallbackRequestModelOperation1739755054(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, System.Guid id, System.Collections.Generic.Dictionary<System.Guid, System.Guid> versions, Marten.Schema.DocumentMapping mapping) : base(document, id, versions, mapping)
        {
            _document = document;
            _id = id;
            _versions = versions;
            _mapping = mapping;
        }



        public override void Postprocess(System.Data.Common.DbDataReader reader, System.Collections.Generic.IList<System.Exception> exceptions)
        {
            storeVersion();
        }


        public override System.Threading.Tasks.Task PostprocessAsync(System.Data.Common.DbDataReader reader, System.Collections.Generic.IList<System.Exception> exceptions, System.Threading.CancellationToken token)
        {
            storeVersion();
            // Nothing
            return System.Threading.Tasks.Task.CompletedTask;
        }


        public override Marten.Internal.Operations.OperationRole Role()
        {
            return Marten.Internal.Operations.OperationRole.Upsert;
        }


        public override NpgsqlTypes.NpgsqlDbType DbType()
        {
            return NpgsqlTypes.NpgsqlDbType.Uuid;
        }


        public override void ConfigureParameters(Weasel.Postgresql.IGroupedParameterBuilder parameterBuilder, Weasel.Postgresql.ICommandBuilder builder, ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session)
        {
            builder.Append("select public.mt_upsert_callbackrequestmodel(");
            var parameter0 = parameterBuilder.AppendParameter(session.Serializer.ToJson(_document));
            parameter0.NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Jsonb;
            // .Net Class Type
            var parameter1 = parameterBuilder.AppendParameter(_document.GetType().FullName);
            parameter1.NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Varchar;
            var parameter2 = parameterBuilder.AppendParameter(document.Id);
            setVersionParameter(parameterBuilder);
            builder.Append(')');
        }

    }

    // END: UpsertCallbackRequestModelOperation1739755054
    
    
    // START: InsertCallbackRequestModelOperation1739755054
    public class InsertCallbackRequestModelOperation1739755054 : Marten.Internal.Operations.StorageOperation<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>
    {
        private readonly ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel _document;
        private readonly System.Guid _id;
        private readonly System.Collections.Generic.Dictionary<System.Guid, System.Guid> _versions;
        private readonly Marten.Schema.DocumentMapping _mapping;

        public InsertCallbackRequestModelOperation1739755054(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, System.Guid id, System.Collections.Generic.Dictionary<System.Guid, System.Guid> versions, Marten.Schema.DocumentMapping mapping) : base(document, id, versions, mapping)
        {
            _document = document;
            _id = id;
            _versions = versions;
            _mapping = mapping;
        }



        public override void Postprocess(System.Data.Common.DbDataReader reader, System.Collections.Generic.IList<System.Exception> exceptions)
        {
            storeVersion();
        }


        public override System.Threading.Tasks.Task PostprocessAsync(System.Data.Common.DbDataReader reader, System.Collections.Generic.IList<System.Exception> exceptions, System.Threading.CancellationToken token)
        {
            storeVersion();
            // Nothing
            return System.Threading.Tasks.Task.CompletedTask;
        }


        public override Marten.Internal.Operations.OperationRole Role()
        {
            return Marten.Internal.Operations.OperationRole.Insert;
        }


        public override NpgsqlTypes.NpgsqlDbType DbType()
        {
            return NpgsqlTypes.NpgsqlDbType.Uuid;
        }


        public override void ConfigureParameters(Weasel.Postgresql.IGroupedParameterBuilder parameterBuilder, Weasel.Postgresql.ICommandBuilder builder, ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session)
        {
            builder.Append("select public.mt_insert_callbackrequestmodel(");
            var parameter0 = parameterBuilder.AppendParameter(session.Serializer.ToJson(_document));
            parameter0.NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Jsonb;
            // .Net Class Type
            var parameter1 = parameterBuilder.AppendParameter(_document.GetType().FullName);
            parameter1.NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Varchar;
            var parameter2 = parameterBuilder.AppendParameter(document.Id);
            setVersionParameter(parameterBuilder);
            builder.Append(')');
        }

    }

    // END: InsertCallbackRequestModelOperation1739755054
    
    
    // START: UpdateCallbackRequestModelOperation1739755054
    public class UpdateCallbackRequestModelOperation1739755054 : Marten.Internal.Operations.StorageOperation<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>
    {
        private readonly ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel _document;
        private readonly System.Guid _id;
        private readonly System.Collections.Generic.Dictionary<System.Guid, System.Guid> _versions;
        private readonly Marten.Schema.DocumentMapping _mapping;

        public UpdateCallbackRequestModelOperation1739755054(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, System.Guid id, System.Collections.Generic.Dictionary<System.Guid, System.Guid> versions, Marten.Schema.DocumentMapping mapping) : base(document, id, versions, mapping)
        {
            _document = document;
            _id = id;
            _versions = versions;
            _mapping = mapping;
        }



        public override void Postprocess(System.Data.Common.DbDataReader reader, System.Collections.Generic.IList<System.Exception> exceptions)
        {
            storeVersion();
            postprocessUpdate(reader, exceptions);
        }


        public override async System.Threading.Tasks.Task PostprocessAsync(System.Data.Common.DbDataReader reader, System.Collections.Generic.IList<System.Exception> exceptions, System.Threading.CancellationToken token)
        {
            storeVersion();
            await postprocessUpdateAsync(reader, exceptions, token);
        }


        public override Marten.Internal.Operations.OperationRole Role()
        {
            return Marten.Internal.Operations.OperationRole.Update;
        }


        public override NpgsqlTypes.NpgsqlDbType DbType()
        {
            return NpgsqlTypes.NpgsqlDbType.Uuid;
        }


        public override void ConfigureParameters(Weasel.Postgresql.IGroupedParameterBuilder parameterBuilder, Weasel.Postgresql.ICommandBuilder builder, ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session)
        {
            builder.Append("select public.mt_update_callbackrequestmodel(");
            var parameter0 = parameterBuilder.AppendParameter(session.Serializer.ToJson(_document));
            parameter0.NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Jsonb;
            // .Net Class Type
            var parameter1 = parameterBuilder.AppendParameter(_document.GetType().FullName);
            parameter1.NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Varchar;
            var parameter2 = parameterBuilder.AppendParameter(document.Id);
            setVersionParameter(parameterBuilder);
            builder.Append(')');
        }

    }

    // END: UpdateCallbackRequestModelOperation1739755054
    
    
    // START: QueryOnlyCallbackRequestModelSelector1739755054
    public class QueryOnlyCallbackRequestModelSelector1739755054 : Marten.Internal.CodeGeneration.DocumentSelectorWithOnlySerializer, Marten.Linq.Selectors.ISelector<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel>
    {
        private readonly Marten.Internal.IMartenSession _session;
        private readonly Marten.Schema.DocumentMapping _mapping;

        public QueryOnlyCallbackRequestModelSelector1739755054(Marten.Internal.IMartenSession session, Marten.Schema.DocumentMapping mapping) : base(session, mapping)
        {
            _session = session;
            _mapping = mapping;
        }



        public ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel Resolve(System.Data.Common.DbDataReader reader)
        {

            ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document;
            document = _serializer.FromJson<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel>(reader, 0);
            return document;
        }


        public async System.Threading.Tasks.Task<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel> ResolveAsync(System.Data.Common.DbDataReader reader, System.Threading.CancellationToken token)
        {

            ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document;
            document = await _serializer.FromJsonAsync<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel>(reader, 0, token).ConfigureAwait(false);
            return document;
        }

    }

    // END: QueryOnlyCallbackRequestModelSelector1739755054
    
    
    // START: LightweightCallbackRequestModelSelector1739755054
    public class LightweightCallbackRequestModelSelector1739755054 : Marten.Internal.CodeGeneration.DocumentSelectorWithVersions<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>, Marten.Linq.Selectors.ISelector<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel>
    {
        private readonly Marten.Internal.IMartenSession _session;
        private readonly Marten.Schema.DocumentMapping _mapping;

        public LightweightCallbackRequestModelSelector1739755054(Marten.Internal.IMartenSession session, Marten.Schema.DocumentMapping mapping) : base(session, mapping)
        {
            _session = session;
            _mapping = mapping;
        }



        public ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel Resolve(System.Data.Common.DbDataReader reader)
        {
            var id = reader.GetFieldValue<System.Guid>(0);

            ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document;
            document = _serializer.FromJson<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel>(reader, 1);
            _session.MarkAsDocumentLoaded(id, document);
            return document;
        }


        public async System.Threading.Tasks.Task<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel> ResolveAsync(System.Data.Common.DbDataReader reader, System.Threading.CancellationToken token)
        {
            var id = await reader.GetFieldValueAsync<System.Guid>(0, token);

            ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document;
            document = await _serializer.FromJsonAsync<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel>(reader, 1, token).ConfigureAwait(false);
            _session.MarkAsDocumentLoaded(id, document);
            return document;
        }

    }

    // END: LightweightCallbackRequestModelSelector1739755054
    
    
    // START: IdentityMapCallbackRequestModelSelector1739755054
    public class IdentityMapCallbackRequestModelSelector1739755054 : Marten.Internal.CodeGeneration.DocumentSelectorWithIdentityMap<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>, Marten.Linq.Selectors.ISelector<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel>
    {
        private readonly Marten.Internal.IMartenSession _session;
        private readonly Marten.Schema.DocumentMapping _mapping;

        public IdentityMapCallbackRequestModelSelector1739755054(Marten.Internal.IMartenSession session, Marten.Schema.DocumentMapping mapping) : base(session, mapping)
        {
            _session = session;
            _mapping = mapping;
        }



        public ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel Resolve(System.Data.Common.DbDataReader reader)
        {
            var id = reader.GetFieldValue<System.Guid>(0);
            if (_identityMap.TryGetValue(id, out var existing)) return existing;

            ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document;
            document = _serializer.FromJson<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel>(reader, 1);
            _session.MarkAsDocumentLoaded(id, document);
            _identityMap[id] = document;
            return document;
        }


        public async System.Threading.Tasks.Task<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel> ResolveAsync(System.Data.Common.DbDataReader reader, System.Threading.CancellationToken token)
        {
            var id = await reader.GetFieldValueAsync<System.Guid>(0, token);
            if (_identityMap.TryGetValue(id, out var existing)) return existing;

            ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document;
            document = await _serializer.FromJsonAsync<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel>(reader, 1, token).ConfigureAwait(false);
            _session.MarkAsDocumentLoaded(id, document);
            _identityMap[id] = document;
            return document;
        }

    }

    // END: IdentityMapCallbackRequestModelSelector1739755054
    
    
    // START: DirtyTrackingCallbackRequestModelSelector1739755054
    public class DirtyTrackingCallbackRequestModelSelector1739755054 : Marten.Internal.CodeGeneration.DocumentSelectorWithDirtyChecking<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>, Marten.Linq.Selectors.ISelector<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel>
    {
        private readonly Marten.Internal.IMartenSession _session;
        private readonly Marten.Schema.DocumentMapping _mapping;

        public DirtyTrackingCallbackRequestModelSelector1739755054(Marten.Internal.IMartenSession session, Marten.Schema.DocumentMapping mapping) : base(session, mapping)
        {
            _session = session;
            _mapping = mapping;
        }



        public ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel Resolve(System.Data.Common.DbDataReader reader)
        {
            var id = reader.GetFieldValue<System.Guid>(0);
            if (_identityMap.TryGetValue(id, out var existing)) return existing;

            ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document;
            document = _serializer.FromJson<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel>(reader, 1);
            _session.MarkAsDocumentLoaded(id, document);
            _identityMap[id] = document;
            StoreTracker(_session, document);
            return document;
        }


        public async System.Threading.Tasks.Task<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel> ResolveAsync(System.Data.Common.DbDataReader reader, System.Threading.CancellationToken token)
        {
            var id = await reader.GetFieldValueAsync<System.Guid>(0, token);
            if (_identityMap.TryGetValue(id, out var existing)) return existing;

            ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document;
            document = await _serializer.FromJsonAsync<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel>(reader, 1, token).ConfigureAwait(false);
            _session.MarkAsDocumentLoaded(id, document);
            _identityMap[id] = document;
            StoreTracker(_session, document);
            return document;
        }

    }

    // END: DirtyTrackingCallbackRequestModelSelector1739755054
    
    
    // START: QueryOnlyCallbackRequestModelDocumentStorage1739755054
    public class QueryOnlyCallbackRequestModelDocumentStorage1739755054 : Marten.Internal.Storage.QueryOnlyDocumentStorage<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>
    {
        private readonly Marten.Schema.DocumentMapping _document;

        public QueryOnlyCallbackRequestModelDocumentStorage1739755054(Marten.Schema.DocumentMapping document) : base(document)
        {
            _document = document;
        }



        public override System.Guid AssignIdentity(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, string tenantId, Marten.Storage.IMartenDatabase database)
        {
            if (document.Id == Guid.Empty) _setter(document, Marten.Schema.Identity.CombGuidIdGeneration.NewGuid());
            return document.Id;
        }


        public override Marten.Internal.Operations.IStorageOperation Update(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session, string tenant)
        {

            return new Marten.Generated.DocumentStorage.UpdateCallbackRequestModelOperation1739755054
            (
                document, Identity(document),
                session.Versions.ForType<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>(),
                _document
                
            );
        }


        public override Marten.Internal.Operations.IStorageOperation Insert(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session, string tenant)
        {

            return new Marten.Generated.DocumentStorage.InsertCallbackRequestModelOperation1739755054
            (
                document, Identity(document),
                session.Versions.ForType<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>(),
                _document
                
            );
        }


        public override Marten.Internal.Operations.IStorageOperation Upsert(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session, string tenant)
        {

            return new Marten.Generated.DocumentStorage.UpsertCallbackRequestModelOperation1739755054
            (
                document, Identity(document),
                session.Versions.ForType<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>(),
                _document
                
            );
        }


        public override Marten.Internal.Operations.IStorageOperation Overwrite(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session, string tenant)
        {
            throw new System.NotSupportedException();
        }


        public override System.Guid Identity(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document)
        {
            return document.Id;
        }


        public override Marten.Linq.Selectors.ISelector BuildSelector(Marten.Internal.IMartenSession session)
        {
            return new Marten.Generated.DocumentStorage.QueryOnlyCallbackRequestModelSelector1739755054(session, _document);
        }


        public override object RawIdentityValue(System.Guid id)
        {
            return id;
        }


        public override Npgsql.NpgsqlParameter BuildManyIdParameter(System.Guid[] ids)
        {
            return base.BuildManyIdParameter(ids);
        }

    }

    // END: QueryOnlyCallbackRequestModelDocumentStorage1739755054
    
    
    // START: LightweightCallbackRequestModelDocumentStorage1739755054
    public class LightweightCallbackRequestModelDocumentStorage1739755054 : Marten.Internal.Storage.LightweightDocumentStorage<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>
    {
        private readonly Marten.Schema.DocumentMapping _document;

        public LightweightCallbackRequestModelDocumentStorage1739755054(Marten.Schema.DocumentMapping document) : base(document)
        {
            _document = document;
        }



        public override System.Guid AssignIdentity(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, string tenantId, Marten.Storage.IMartenDatabase database)
        {
            if (document.Id == Guid.Empty) _setter(document, Marten.Schema.Identity.CombGuidIdGeneration.NewGuid());
            return document.Id;
        }


        public override Marten.Internal.Operations.IStorageOperation Update(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session, string tenant)
        {

            return new Marten.Generated.DocumentStorage.UpdateCallbackRequestModelOperation1739755054
            (
                document, Identity(document),
                session.Versions.ForType<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>(),
                _document
                
            );
        }


        public override Marten.Internal.Operations.IStorageOperation Insert(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session, string tenant)
        {

            return new Marten.Generated.DocumentStorage.InsertCallbackRequestModelOperation1739755054
            (
                document, Identity(document),
                session.Versions.ForType<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>(),
                _document
                
            );
        }


        public override Marten.Internal.Operations.IStorageOperation Upsert(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session, string tenant)
        {

            return new Marten.Generated.DocumentStorage.UpsertCallbackRequestModelOperation1739755054
            (
                document, Identity(document),
                session.Versions.ForType<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>(),
                _document
                
            );
        }


        public override Marten.Internal.Operations.IStorageOperation Overwrite(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session, string tenant)
        {
            throw new System.NotSupportedException();
        }


        public override System.Guid Identity(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document)
        {
            return document.Id;
        }


        public override Marten.Linq.Selectors.ISelector BuildSelector(Marten.Internal.IMartenSession session)
        {
            return new Marten.Generated.DocumentStorage.LightweightCallbackRequestModelSelector1739755054(session, _document);
        }


        public override object RawIdentityValue(System.Guid id)
        {
            return id;
        }


        public override Npgsql.NpgsqlParameter BuildManyIdParameter(System.Guid[] ids)
        {
            return base.BuildManyIdParameter(ids);
        }

    }

    // END: LightweightCallbackRequestModelDocumentStorage1739755054
    
    
    // START: IdentityMapCallbackRequestModelDocumentStorage1739755054
    public class IdentityMapCallbackRequestModelDocumentStorage1739755054 : Marten.Internal.Storage.IdentityMapDocumentStorage<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>
    {
        private readonly Marten.Schema.DocumentMapping _document;

        public IdentityMapCallbackRequestModelDocumentStorage1739755054(Marten.Schema.DocumentMapping document) : base(document)
        {
            _document = document;
        }



        public override System.Guid AssignIdentity(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, string tenantId, Marten.Storage.IMartenDatabase database)
        {
            if (document.Id == Guid.Empty) _setter(document, Marten.Schema.Identity.CombGuidIdGeneration.NewGuid());
            return document.Id;
        }


        public override Marten.Internal.Operations.IStorageOperation Update(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session, string tenant)
        {

            return new Marten.Generated.DocumentStorage.UpdateCallbackRequestModelOperation1739755054
            (
                document, Identity(document),
                session.Versions.ForType<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>(),
                _document
                
            );
        }


        public override Marten.Internal.Operations.IStorageOperation Insert(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session, string tenant)
        {

            return new Marten.Generated.DocumentStorage.InsertCallbackRequestModelOperation1739755054
            (
                document, Identity(document),
                session.Versions.ForType<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>(),
                _document
                
            );
        }


        public override Marten.Internal.Operations.IStorageOperation Upsert(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session, string tenant)
        {

            return new Marten.Generated.DocumentStorage.UpsertCallbackRequestModelOperation1739755054
            (
                document, Identity(document),
                session.Versions.ForType<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>(),
                _document
                
            );
        }


        public override Marten.Internal.Operations.IStorageOperation Overwrite(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session, string tenant)
        {
            throw new System.NotSupportedException();
        }


        public override System.Guid Identity(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document)
        {
            return document.Id;
        }


        public override Marten.Linq.Selectors.ISelector BuildSelector(Marten.Internal.IMartenSession session)
        {
            return new Marten.Generated.DocumentStorage.IdentityMapCallbackRequestModelSelector1739755054(session, _document);
        }


        public override object RawIdentityValue(System.Guid id)
        {
            return id;
        }


        public override Npgsql.NpgsqlParameter BuildManyIdParameter(System.Guid[] ids)
        {
            return base.BuildManyIdParameter(ids);
        }

    }

    // END: IdentityMapCallbackRequestModelDocumentStorage1739755054
    
    
    // START: DirtyTrackingCallbackRequestModelDocumentStorage1739755054
    public class DirtyTrackingCallbackRequestModelDocumentStorage1739755054 : Marten.Internal.Storage.DirtyCheckedDocumentStorage<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>
    {
        private readonly Marten.Schema.DocumentMapping _document;

        public DirtyTrackingCallbackRequestModelDocumentStorage1739755054(Marten.Schema.DocumentMapping document) : base(document)
        {
            _document = document;
        }



        public override System.Guid AssignIdentity(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, string tenantId, Marten.Storage.IMartenDatabase database)
        {
            if (document.Id == Guid.Empty) _setter(document, Marten.Schema.Identity.CombGuidIdGeneration.NewGuid());
            return document.Id;
        }


        public override Marten.Internal.Operations.IStorageOperation Update(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session, string tenant)
        {

            return new Marten.Generated.DocumentStorage.UpdateCallbackRequestModelOperation1739755054
            (
                document, Identity(document),
                session.Versions.ForType<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>(),
                _document
                
            );
        }


        public override Marten.Internal.Operations.IStorageOperation Insert(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session, string tenant)
        {

            return new Marten.Generated.DocumentStorage.InsertCallbackRequestModelOperation1739755054
            (
                document, Identity(document),
                session.Versions.ForType<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>(),
                _document
                
            );
        }


        public override Marten.Internal.Operations.IStorageOperation Upsert(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session, string tenant)
        {

            return new Marten.Generated.DocumentStorage.UpsertCallbackRequestModelOperation1739755054
            (
                document, Identity(document),
                session.Versions.ForType<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>(),
                _document
                
            );
        }


        public override Marten.Internal.Operations.IStorageOperation Overwrite(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Internal.IMartenSession session, string tenant)
        {
            throw new System.NotSupportedException();
        }


        public override System.Guid Identity(ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document)
        {
            return document.Id;
        }


        public override Marten.Linq.Selectors.ISelector BuildSelector(Marten.Internal.IMartenSession session)
        {
            return new Marten.Generated.DocumentStorage.DirtyTrackingCallbackRequestModelSelector1739755054(session, _document);
        }


        public override object RawIdentityValue(System.Guid id)
        {
            return id;
        }


        public override Npgsql.NpgsqlParameter BuildManyIdParameter(System.Guid[] ids)
        {
            return base.BuildManyIdParameter(ids);
        }

    }

    // END: DirtyTrackingCallbackRequestModelDocumentStorage1739755054
    
    
    // START: CallbackRequestModelBulkLoader1739755054
    public class CallbackRequestModelBulkLoader1739755054 : Marten.Internal.CodeGeneration.BulkLoader<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid>
    {
        private readonly Marten.Internal.Storage.IDocumentStorage<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid> _storage;

        public CallbackRequestModelBulkLoader1739755054(Marten.Internal.Storage.IDocumentStorage<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel, System.Guid> storage) : base(storage)
        {
            _storage = storage;
        }


        public const string MAIN_LOADER_SQL = "COPY public.mt_doc_callbackrequestmodel(\"mt_dotnet_type\", \"id\", \"mt_version\", \"data\") FROM STDIN BINARY";

        public const string TEMP_LOADER_SQL = "COPY mt_doc_callbackrequestmodel_temp(\"mt_dotnet_type\", \"id\", \"mt_version\", \"data\") FROM STDIN BINARY";

        public const string COPY_NEW_DOCUMENTS_SQL = "insert into public.mt_doc_callbackrequestmodel (\"id\", \"data\", \"mt_version\", \"mt_dotnet_type\", mt_last_modified) (select mt_doc_callbackrequestmodel_temp.\"id\", mt_doc_callbackrequestmodel_temp.\"data\", mt_doc_callbackrequestmodel_temp.\"mt_version\", mt_doc_callbackrequestmodel_temp.\"mt_dotnet_type\", transaction_timestamp() from mt_doc_callbackrequestmodel_temp left join public.mt_doc_callbackrequestmodel on mt_doc_callbackrequestmodel_temp.id = public.mt_doc_callbackrequestmodel.id where public.mt_doc_callbackrequestmodel.id is null)";

        public const string OVERWRITE_SQL = "update public.mt_doc_callbackrequestmodel target SET data = source.data, mt_version = source.mt_version, mt_dotnet_type = source.mt_dotnet_type, mt_last_modified = transaction_timestamp() FROM mt_doc_callbackrequestmodel_temp source WHERE source.id = target.id";

        public const string CREATE_TEMP_TABLE_FOR_COPYING_SQL = "create temporary table mt_doc_callbackrequestmodel_temp (like public.mt_doc_callbackrequestmodel including defaults)";


        public override string CreateTempTableForCopying()
        {
            return CREATE_TEMP_TABLE_FOR_COPYING_SQL;
        }


        public override string CopyNewDocumentsFromTempTable()
        {
            return COPY_NEW_DOCUMENTS_SQL;
        }


        public override string OverwriteDuplicatesFromTempTable()
        {
            return OVERWRITE_SQL;
        }


        public override void LoadRow(Npgsql.NpgsqlBinaryImporter writer, ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Storage.Tenant tenant, Marten.ISerializer serializer)
        {
            writer.Write(document.GetType().FullName, NpgsqlTypes.NpgsqlDbType.Varchar);
            writer.Write(document.Id, NpgsqlTypes.NpgsqlDbType.Uuid);
            writer.Write(Marten.Schema.Identity.CombGuidIdGeneration.NewGuid(), NpgsqlTypes.NpgsqlDbType.Uuid);
            writer.Write(serializer.ToJson(document), NpgsqlTypes.NpgsqlDbType.Jsonb);
        }


        public override async System.Threading.Tasks.Task LoadRowAsync(Npgsql.NpgsqlBinaryImporter writer, ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel document, Marten.Storage.Tenant tenant, Marten.ISerializer serializer, System.Threading.CancellationToken cancellation)
        {
            await writer.WriteAsync(document.GetType().FullName, NpgsqlTypes.NpgsqlDbType.Varchar, cancellation);
            await writer.WriteAsync(document.Id, NpgsqlTypes.NpgsqlDbType.Uuid, cancellation);
            await writer.WriteAsync(Marten.Schema.Identity.CombGuidIdGeneration.NewGuid(), NpgsqlTypes.NpgsqlDbType.Uuid, cancellation);
            await writer.WriteAsync(serializer.ToJson(document), NpgsqlTypes.NpgsqlDbType.Jsonb, cancellation);
        }


        public override string MainLoaderSql()
        {
            return MAIN_LOADER_SQL;
        }


        public override string TempLoaderSql()
        {
            return TEMP_LOADER_SQL;
        }

    }

    // END: CallbackRequestModelBulkLoader1739755054
    
    
    // START: CallbackRequestModelProvider1739755054
    public class CallbackRequestModelProvider1739755054 : Marten.Internal.Storage.DocumentProvider<ApogeeDev.WebhookTester.Common.Models.CallbackRequestModel>
    {
        private readonly Marten.Schema.DocumentMapping _mapping;

        public CallbackRequestModelProvider1739755054(Marten.Schema.DocumentMapping mapping) : base(new CallbackRequestModelBulkLoader1739755054(new QueryOnlyCallbackRequestModelDocumentStorage1739755054(mapping)), new QueryOnlyCallbackRequestModelDocumentStorage1739755054(mapping), new LightweightCallbackRequestModelDocumentStorage1739755054(mapping), new IdentityMapCallbackRequestModelDocumentStorage1739755054(mapping), new DirtyTrackingCallbackRequestModelDocumentStorage1739755054(mapping))
        {
            _mapping = mapping;
        }


    }

    // END: CallbackRequestModelProvider1739755054
    
    
}

